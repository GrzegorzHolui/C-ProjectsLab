// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VatApi;

#nullable disable

namespace VatApi.Migrations
{
    [DbContext(typeof(VatRepository))]
    [Migration("20240411150032_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.3");

            modelBuilder.Entity("VatApi.VatDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("address")
                        .HasColumnType("TEXT");

                    b.Property<bool>("isValid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .HasColumnType("TEXT");

                    b.Property<string>("originalVatNumber")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("requestDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("requestIdentifier")
                        .HasColumnType("TEXT");

                    b.Property<string>("userError")
                        .HasColumnType("TEXT");

                    b.Property<string>("vatNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("viesApproximateId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("viesApproximateId");

                    b.ToTable("vats");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            isValid = true,
                            vatNumber = "123456789"
                        },
                        new
                        {
                            Id = 2,
                            isValid = false,
                            vatNumber = "123"
                        },
                        new
                        {
                            Id = 3,
                            isValid = true,
                            vatNumber = "4455"
                        });
                });

            modelBuilder.Entity("VatApi.ViesApproximateDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("city")
                        .HasColumnType("TEXT");

                    b.Property<string>("companyType")
                        .HasColumnType("TEXT");

                    b.Property<int?>("matchCity")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("matchCompanyType")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("matchName")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("matchPostalCode")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("matchStreet")
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .HasColumnType("TEXT");

                    b.Property<string>("postalCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("street")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ViesApproximateDb");
                });

            modelBuilder.Entity("VatApi.VatDb", b =>
                {
                    b.HasOne("VatApi.ViesApproximateDb", "viesApproximate")
                        .WithMany()
                        .HasForeignKey("viesApproximateId");

                    b.Navigation("viesApproximate");
                });
#pragma warning restore 612, 618
        }
    }
}
